Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000 
ix. review table =  10000
0x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000 (id)
ii. Hours = 1562 (business_id)
iii. Category = 2643 (business_id)
iv. Attribute = 1115 (business_id)
v. Review = 10000 (id), 8090 (business_id,FK), 9581(user_id,FK)
vi. Checkin = 493 (business_id)
vii. Photo = 10000 (id),  6493 (business_id,FK)
viii. Tip = 537 (user_id), 3979 (business_id,FK)
ix. User = 10000 (id)
x. Friend = 11 (user_id)
xi. Elite_years = 2780 (user_id)

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: NO
	
	
	SQL code used to arrive at answer:
SELECT *
FROM user
WHERE id IS NULL
     OR name IS NULL
     OR review_count IS NULL
     OR yelping_since IS NULL
     OR useful IS NULL
     OR funny IS NULL
     OR cool IS NULL
     OR fans IS NULL
     OR average_stars IS NULL
     OR compliment_hot IS NULL
     OR compliment_more IS NULL
     OR compliment_profile IS NULL
     OR compliment_cute IS NULL
     OR compliment_list IS NULL
     OR compliment_note IS NULL
     OR compliment_plain IS NULL
     OR compliment_cool IS NULL
     OR compliment_funny IS NULL
     OR compliment_writer IS NULL
     OR compliment_photos IS NULL;
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1.0	max: 5.0	avg: 3.6549 
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000	avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer: 

SELECT city, SUM(review_count) AS reviews
FROM business
GROUP BY city
ORDER BY reviews desc;
	
	
	Copy and Paste the Result Below: 
-----------------+---------+
| city            | reviews |
+-----------------+---------+
| Las Vegas       |   82854 |
| Phoenix         |   34503 |
| Toronto         |   24113 |
| Scottsdale      |   20614 |
| Charlotte       |   12523 |
| Henderson       |   10871 |
| Tempe           |   10504 |
| Pittsburgh      |    9798 |
| Montréal        |    9448 |
| Chandler        |    8112 |
| Mesa            |    6875 |
| Gilbert         |    6380 |
| Cleveland       |    5593 |
| Madison         |    5265 |
| Glendale        |    4406 |
| Mississauga     |    3814 |
| Edinburgh       |    2792 |
| Peoria          |    2624 |
| North Las Vegas |    2438 |
| Markham         |    2352 |
| Champaign       |    2029 |
| Stuttgart       |    1849 |
| Surprise        |    1520 |
| Lakewood        |    1465 |
| Goodyear        |    1155 |
+-----------------+---------+
(Output limit exceeded, 25 of 362 total rows shown)
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

SELECT stars AS [Star Rating] ,COUNT(stars) AS [starcount]
FROM business
WHERE city= 'Avon'
GROUP BY stars;


Copy and Paste the Resulting Table Below (2 columns – star rating and count): 
+-------------+-----------+
| Star Rating | starcount |
+-------------+-----------+
|         1.5 |         1 |
|         2.5 |         2 |
|         3.5 |         3 |
|         4.0 |         2 |
|         4.5 |         1 |
|         5.0 |         1 |
+-------------+-----------+


ii. Beachwood

SQL code used to arrive at answer: 

SELECT stars AS [Star Rating] ,COUNT(stars) AS [starcount]
FROM business
WHERE city= 'Beachwood'
GROUP BY stars;


Copy and Paste the Resulting Table Below (2 columns – star rating and count): 
+-------------+-----------+
| Star Rating | starcount |
+-------------+-----------+
|         2.0 |         1 |
|         2.5 |         1 |
|         3.0 |         2 |
|         3.5 |         2 |
|         4.0 |         1 |
|         4.5 |         2 |
|         5.0 |         5 |
+-------------+-----------+
		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer: 

SELECT name, review_count
FROM user 
ORDER BY review_count DESC
LIMIT 3;
	
		
	Copy and Paste the Result Below:  
+--------+--------------+
| name   | review_count |
+--------+--------------+
| Gerald |         2000 |
| Sara   |         1629 |
| Yuri   |         1339 |
+--------+--------------+

		


8. Does posing more reviews correlate with more fans? NO

	Please explain your findings and interpretation of the results: 
This is the list of the query result which clearly states that the business having more review count does not necessarily have more fans. SO, we can say that they are not correlated to each other.

+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| .Hon      |         1246 |  101 |
| Alison    |          775 |   61 |
| Amy       |          609 |  503 |
| Angela    |          694 |  101 |
| Annie     |          651 |   52 |
| Bridget   |          574 |   55 |
| C         |          515 |   12 |
| Christina |          842 |   85 |
| Christine |          930 |  173 |
| Crissy    |          676 |   25 |
+-----------+--------------+------+
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: LOVE

	
	SQL code used to arrive at answer:
SELECT 
(SELECT COUNT(text)
FROM review
WHERE text LIKE "%Love%") AS LOVE,
(SELECT COUNT(text)
FROM review
WHERE text LIKE "%Hate%") AS HATE;
	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer: 
SELECT name,fans
FROM user
ORDER BY fans DESC
LIMIT 10;
	
	
	Copy and Paste the Result Below:
+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+

	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?
ANS: I choose 'Las Vegas' and 'Shopping' in category.
Well after analysing the data with those categories,I can say that no,they do not have a different distribution of hours and they both operate at quite same hours.
ss
CODE FOR 2-3 STARS:
 SELECT
      business.name,
      hours.hours,
        CASE WHEN stars >= 2.0 THEN '2-3 stars'
           ELSE 'below 2' 
           END AS 'Star_Ratings'
FROM ((business
INNER JOIN hours
ON business.id=hours.business_id)
INNER JOIN category
ON business.id=category.business_id)
WHERE city = 'Las Vegas' 
  AND category.category='Shopping';

CODE FOR 4-5 STARS:
SELECT
      business.name,
      hours.hours,
      CASE WHEN stars >= 4.0 THEN '4-5 stars'
           ELSE 'below 2' 
           END AS 'Star_Ratings'
FROM ((business
INNER JOIN hours
ON business.id=hours.business_id)
INNER JOIN category
ON business.id=category.business_id)
WHERE city = 'Las Vegas' 
  AND category.category='Shopping';

+--------------------------------+-----------------------+--------------+
| name                           | hours                 | Star_Ratings |
+--------------------------------+-----------------------+--------------+
| Wooly Wonders                  | Monday|10:00-16:00    | 2-3 stars    |
| Wooly Wonders                  | Tuesday|10:00-19:00   | 2-3 stars    |
| Wooly Wonders                  | Friday|10:00-16:00    | 2-3 stars    |
| Wooly Wonders                  | Wednesday|10:00-16:00 | 2-3 stars    |
| Wooly Wonders                  | Thursday|10:00-19:00  | 2-3 stars    |
| Wooly Wonders                  | Saturday|10:00-16:00  | 2-3 stars    |
| Red Rock Canyon Visitor Center | Monday|8:00-16:30     | 2-3 stars    |
| Red Rock Canyon Visitor Center | Tuesday|8:00-16:30    | 2-3 stars    |
| Red Rock Canyon Visitor Center | Friday|8:00-16:30     | 2-3 stars    |
| Red Rock Canyon Visitor Center | Wednesday|8:00-16:30  | 2-3 stars    |
| Red Rock Canyon Visitor Center | Thursday|8:00-16:30   | 2-3 stars    |
| Red Rock Canyon Visitor Center | Sunday|8:00-16:30     | 2-3 stars    |
| Red Rock Canyon Visitor Center | Saturday|8:00-16:30   | 2-3 stars    |
| Walgreens                      | Monday|8:00-22:00     | 2-3 stars    |
| Walgreens                      | Tuesday|8:00-22:00    | 2-3 stars    |
| Walgreens                      | Friday|8:00-22:00     | 2-3 stars    |
| Walgreens                      | Wednesday|8:00-22:00  | 2-3 stars    |
| Walgreens                      | Thursday|8:00-22:00   | 2-3 stars    |
| Walgreens                      | Sunday|8:00-22:00     | 2-3 stars    |
| Walgreens                      | Saturday|8:00-22:00   | 2-3 stars    |
| Desert Medical Equipment       | Friday|8:00-17:00     | 2-3 stars    |
| Desert Medical Equipment       | Tuesday|8:00-17:00    | 2-3 stars    |
| Desert Medical Equipment       | Thursday|8:00-17:00   | 2-3 stars    |
| Desert Medical Equipment       | Wednesday|8:00-17:00  | 2-3 stars    |
| Desert Medical Equipment       | Monday|8:00-17:00     | 2-3 stars    |
+--------------------------------+-----------------------+--------------+

+--------------------------------+-----------------------+--------------+
| name                           | hours                 | Star_Ratings |
+--------------------------------+-----------------------+--------------+
| Red Rock Canyon Visitor Center | Monday|8:00-16:30     | 4-5 stars    |
| Red Rock Canyon Visitor Center | Tuesday|8:00-16:30    | 4-5 stars    |
| Red Rock Canyon Visitor Center | Friday|8:00-16:30     | 4-5 stars    |
| Red Rock Canyon Visitor Center | Wednesday|8:00-16:30  | 4-5 stars    |
| Red Rock Canyon Visitor Center | Thursday|8:00-16:30   | 4-5 stars    |
| Red Rock Canyon Visitor Center | Sunday|8:00-16:30     | 4-5 stars    |
| Red Rock Canyon Visitor Center | Saturday|8:00-16:30   | 4-5 stars    |
| Desert Medical Equipment       | Friday|8:00-17:00     | 4-5 stars    |
| Desert Medical Equipment       | Tuesday|8:00-17:00    | 4-5 stars    |
| Desert Medical Equipment       | Thursday|8:00-17:00   | 4-5 stars    |
| Desert Medical Equipment       | Wednesday|8:00-17:00  | 4-5 stars    |
| Desert Medical Equipment       | Monday|8:00-17:00     | 4-5 stars    |      
+--------------------------------+-----------------------+--------------+




ii. Do the two groups you chose to analyze have a different number of reviews?
ANS: The two groups have a different number of reviews respectably 17 for '2-3 stars' and 36 for '4-5 stars'.
The group with '4-5 stars' have slightly more than 50% of revirews than the other.
         

SELECT
      CASE WHEN stars >= 4.0 THEN '4-5 stars'
           WHEN stars >= 2.0 THEN '2-3 stars'
           ELSE 'below 2' 
           END AS 'Star_Ratings',
      COUNT(DISTINCT business_id) AS ID,
      SUM(review_count) AS reviews
FROM business
INNER JOIN category
ON business.id=category.business_id
WHERE city = 'Las Vegas' 
  AND category.category='Shopping'
GROUP BY Star_Ratings;

+--------------+----+---------+
| Star_Ratings | ID | reviews |
+--------------+----+---------+
| 2-3 stars    |  2 |      17 |
| 4-5 stars    |  2 |      36 |
+--------------+----+---------+


         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

ANS: The places with 2-3 stars are located at Tropicana Ave but the places with 4-5 stars are located away from each other.

SQL code used for analysis: 

SELECT 
      CASE WHEN stars >= 4.0 THEN '4-5 stars'
           WHEN stars >= 2.0 THEN '2-3 stars'
           ELSE 'below 2' 
           END AS 'Star_Ratings',
           business.neighborhood,
           business.address,
           business.postal_code
FROM business
JOIN category
ON business.id=category.business_id
WHERE city = 'Las Vegas' 
  AND category.category='Shopping'
ORDER BY Star_Ratings;

+--------------+--------------+-----------------------------+-------------+
| Star_Ratings | neighborhood | address                     | postal_code |
+--------------+--------------+-----------------------------+-------------+
| 2-3 stars    | Southeast    | 3421 E Tropicana Ave, Ste I | 89121       |
| 2-3 stars    | Eastside     | 3808 E Tropicana Ave        | 89121       |
| 4-5 stars    |              | 1000 Scenic Loop Dr         | 89161       |
| 4-5 stars    |              | 3555 W Reno Ave, Ste F      | 89118       |
+--------------+--------------+-----------------------------+-------------+


2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1: The number of open businesses are bigger than the closed ones.
         
         
ii. Difference 2: The number of reviews ans average stars are higher in the open businesses than the closed ones.
         
         
         
SQL code used for analysis: SELECT 
      is_open,
      COUNT(DISTINCT business.id) AS num_business,
      COUNT(DISTINCT review.id) AS num_reviews,
      AVG(review.stars) AS avg_stars
FROM business
JOIN review
ON business.id=review.business_id
GROUP BY is_open;

+---------+--------------+-------------+---------------+
| is_open | num_business | num_reviews |     avg_stars |
+---------+--------------+-------------+---------------+
|       0 |           61 |          71 | 3.64788732394 |
|       1 |          446 |         565 |  3.7610619469 |
+---------+--------------+-------------+---------------+

	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do: 

ANS: Finding out the most successful category of business.
         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

ANS: Among all the categories, I calculated average of stars and the average opened businesses on each category. In order to get statistical reasoning, I only considered the businesses which are more than 10 in number.
From the output we can see that the "Local Services", "Health & Medical", "Home Services", "Shopping", "Beauty & Spas" are the most successful in terms of getting reviews and they also have a higher opened ratio. Furthermore "Bars", "Nightlife", and "Restaurants" have lesser reviews and have a higher closed ratio.
         
                           
                  
iii. Output of your finished dataset:

+------------------------+--------------+-----------+-------------+
| category               | num_business | avg_stars | avg_is_open |
+------------------------+--------------+-----------+-------------+
| Local Services         |           12 |      4.21 |        0.83 |
| Health & Medical       |           17 |      4.09 |        0.94 |
| Home Services          |           16 |       4.0 |        0.94 |
| Shopping               |           30 |      3.98 |        0.83 |
| Beauty & Spas          |           13 |      3.88 |        0.92 |
| American (Traditional) |           11 |      3.82 |        0.73 |
| Food                   |           23 |      3.78 |        0.87 |
| Bars                   |           17 |       3.5 |        0.65 |
| Nightlife              |           20 |      3.48 |         0.6 |
| Restaurants            |           71 |      3.46 |        0.75 |
+------------------------+--------------+-----------+-------------+
         
         
iv. Provide the SQL code you used to create your final dataset:

SELECT category,
       COUNT(business.id) AS num_business,
       ROUND(AVG(business.stars),2) AS avg_stars,
       ROUND(AVG(business.is_open),2) AS avg_is_open
FROM business
INNER JOIN category
ON business.id=category.business_id
GROUP BY category
HAVING num_business > 10
ORDER BY avg_stars DESC,avg_is_open DESC; 
